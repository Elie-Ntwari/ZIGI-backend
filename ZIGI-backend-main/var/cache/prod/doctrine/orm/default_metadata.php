<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Categorie__CLASSMETADATA__' => 0,
'App__Entity__Command__CLASSMETADATA__' => 1,
'App__Entity__Comment__CLASSMETADATA__' => 2,
'App__Entity__DetailsCommand__CLASSMETADATA__' => 3,
'App__Entity__PhotoProduct__CLASSMETADATA__' => 4,
'App__Entity__Product__CLASSMETADATA__' => 5,
'App__Entity__Reply__CLASSMETADATA__' => 6,
'App__Entity__User__CLASSMETADATA__' => 7,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Categorie',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategorieRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categorie',
                    ],
                ],
                'associationMappings' => [
                    [
                        'products' => $o[4],
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\Categorie',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'description',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'description',
                ],
                'length' => [
                    2 => 255,
                ],
                'nullable' => [
                    3 => true,
                ],
                'fetch' => [
                    4 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Categorie',
                ],
                'mappedBy' => [
                    4 => 'idCat',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'products',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Product',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Command',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommandRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'dateCommand' => $o[2],
                        'amount' => $o[3],
                        'currency' => $o[4],
                        'statut_com' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date_command' => 'dateCommand',
                        'amount' => 'amount',
                        'currency' => 'currency',
                        'statut_com' => 'statut_com',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateCommand' => 'date_command',
                        'amount' => 'amount',
                        'currency' => 'currency',
                        'statut_com' => 'statut_com',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'command',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idUser' => $o[6],
                        'detailsCommands' => $o[8],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Command',
                    7 => 'id_user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'datetime',
                    'decimal',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'dateCommand',
                    'amount',
                    'currency',
                    'statut_com',
                ],
                'columnName' => [
                    1 => 'id',
                    'date_command',
                    'amount',
                    'currency',
                    'statut_com',
                ],
                'nullable' => [
                    3 => true,
                    7 => false,
                ],
                'precision' => [
                    3 => 10,
                ],
                'scale' => [
                    3 => 2,
                ],
                'length' => [
                    4 => 3,
                    255,
                ],
                'fetch' => [
                    6 => 2,
                    8 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Command',
                    8 => 'App\\Entity\\Command',
                ],
                'inversedBy' => [
                    6 => 'commands',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'id_user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'id_user_id',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'id_user_id' => 'id_user_id',
                    ],
                ],
                'unique' => [
                    7 => false,
                ],
                'referencedColumnName' => [
                    7 => 'id',
                ],
                'mappedBy' => [
                    8 => 'id_Command',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'idUser',
                    8 => 'detailsCommands',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\User',
                    8 => 'App\\Entity\\DetailsCommand',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Comment',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommentRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'postAt' => $o[2],
                        'description' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'post_at' => 'postAt',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'postAt' => 'post_at',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'comment',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idUser' => $o[4],
                        'replies' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Comment',
                    5 => 'id_user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'datetime',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'postAt',
                    'description',
                ],
                'columnName' => [
                    1 => 'id',
                    'post_at',
                    'description',
                ],
                'fetch' => [
                    4 => 2,
                    6 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Comment',
                    6 => 'App\\Entity\\Comment',
                ],
                'inversedBy' => [
                    4 => 'comments',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'id_user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'id_user_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'id_user_id' => 'id_user_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                ],
                'nullable' => [
                    5 => false,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                ],
                'mappedBy' => [
                    6 => 'idComment',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'idUser',
                    6 => 'replies',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\User',
                    6 => 'App\\Entity\\Reply',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\DetailsCommand',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DetailsCommandRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'totalPrice' => $o[2],
                        'quantity' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'total_price' => 'totalPrice',
                        'quantity' => 'quantity',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'totalPrice' => 'total_price',
                        'quantity' => 'quantity',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'details_command',
                    ],
                ],
                'associationMappings' => [
                    [
                        'id_Produit' => $o[4],
                        'id_Command' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\DetailsCommand',
                    5 => 'id_produit_id',
                    7 => 'id_command_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'decimal',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'totalPrice',
                    'quantity',
                ],
                'columnName' => [
                    1 => 'id',
                    'total_price',
                    'quantity',
                ],
                'precision' => [
                    2 => 10,
                ],
                'scale' => [
                    2 => 2,
                ],
                'fetch' => [
                    4 => 2,
                    6 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\DetailsCommand',
                    6 => 'App\\Entity\\DetailsCommand',
                ],
                'inversedBy' => [
                    4 => 'detailsCommands',
                    6 => 'detailsCommands',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'id_produit_id' => 'id',
                    ],
                    6 => [
                        'id_command_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'id_produit_id',
                    ],
                    6 => [
                        'id' => 'id_command_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'id_produit_id' => 'id_produit_id',
                    ],
                    6 => [
                        'id_command_id' => 'id_command_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                    7 => false,
                ],
                'nullable' => [
                    5 => false,
                    7 => false,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'id_Produit',
                    6 => 'id_Command',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Product',
                    6 => 'App\\Entity\\Command',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PhotoProduct',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PhotoProductRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'url' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'url' => 'url',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'url' => 'url',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'photo_product',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idProduct' => $o[3],
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\PhotoProduct',
                    4 => 'id_product_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'url',
                ],
                'columnName' => [
                    1 => 'id',
                    'url',
                ],
                'fetch' => [
                    3 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\PhotoProduct',
                ],
                'inversedBy' => [
                    3 => 'sendPhotos',
                ],
                'sourceToTargetKeyColumns' => [
                    3 => [
                        'id_product_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    3 => [
                        'id' => 'id_product_id',
                    ],
                ],
                'joinColumns' => [
                    3 => [
                        $o[4],
                    ],
                ],
                'joinColumnFieldNames' => [
                    3 => [
                        'id_product_id' => 'id_product_id',
                    ],
                ],
                'unique' => [
                    4 => false,
                ],
                'nullable' => [
                    4 => false,
                ],
                'referencedColumnName' => [
                    4 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'idProduct',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Product',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Product',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProductRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                        'price' => $o[4],
                        'stock' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'price' => 'price',
                        'stock' => 'stock',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'price' => 'price',
                        'stock' => 'stock',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'product',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idCat' => $o[6],
                        'detailsCommands' => $o[8],
                        'sendPhotos' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Product',
                    7 => 'id_cat_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'decimal',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'price',
                    'stock',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'price',
                    'stock',
                ],
                'length' => [
                    2 => 255,
                ],
                'nullable' => [
                    3 => true,
                    7 => false,
                ],
                'precision' => [
                    4 => 10,
                ],
                'scale' => [
                    4 => 2,
                ],
                'fetch' => [
                    6 => 2,
                    8 => 2,
                    2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Product',
                    8 => 'App\\Entity\\Product',
                    'App\\Entity\\Product',
                ],
                'inversedBy' => [
                    6 => 'products',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'id_cat_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'id_cat_id',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'id_cat_id' => 'id_cat_id',
                    ],
                ],
                'unique' => [
                    7 => false,
                ],
                'referencedColumnName' => [
                    7 => 'id',
                ],
                'mappedBy' => [
                    8 => 'id_Produit',
                    'idProduct',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'idCat',
                    8 => 'detailsCommands',
                    'sendPhotos',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Categorie',
                    8 => 'App\\Entity\\DetailsCommand',
                    'App\\Entity\\PhotoProduct',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Reply',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReplyRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'response' => $o[2],
                        'replyAt' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'response' => 'response',
                        'reply_at' => 'replyAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'response' => 'response',
                        'replyAt' => 'reply_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reply',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idAdmin' => $o[4],
                        'idComment' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Reply',
                    5 => 'id_admin_id',
                    7 => 'id_comment_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'text',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'response',
                    'replyAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'response',
                    'reply_at',
                ],
                'fetch' => [
                    4 => 2,
                    6 => 2,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Reply',
                    6 => 'App\\Entity\\Reply',
                ],
                'inversedBy' => [
                    4 => 'replies',
                    6 => 'replies',
                ],
                'sourceToTargetKeyColumns' => [
                    4 => [
                        'id_admin_id' => 'id',
                    ],
                    6 => [
                        'id_comment_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    4 => [
                        'id' => 'id_admin_id',
                    ],
                    6 => [
                        'id' => 'id_comment_id',
                    ],
                ],
                'joinColumns' => [
                    4 => [
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    4 => [
                        'id_admin_id' => 'id_admin_id',
                    ],
                    6 => [
                        'id_comment_id' => 'id_comment_id',
                    ],
                ],
                'unique' => [
                    5 => false,
                    7 => false,
                ],
                'nullable' => [
                    5 => false,
                    7 => false,
                ],
                'referencedColumnName' => [
                    5 => 'id',
                    7 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'idAdmin',
                    6 => 'idComment',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\User',
                    6 => 'App\\Entity\\Comment',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'lastname' => $o[2],
                        'firstname' => $o[3],
                        'address' => $o[4],
                        'email' => $o[5],
                        'password' => $o[6],
                        'validationCode' => $o[7],
                        'codeExpiresAt' => $o[8],
                        'isActive' => $o[9],
                        'roles' => $o[10],
                        'numero_Tel' => $o[11],
                        'typeUser' => $o[12],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'lastname' => 'lastname',
                        'firstname' => 'firstname',
                        'address' => 'address',
                        'email' => 'email',
                        'password' => 'password',
                        'validation_code' => 'validationCode',
                        'code_expires_at' => 'codeExpiresAt',
                        'is_active' => 'isActive',
                        'roles' => 'roles',
                        'numero_tel' => 'numero_Tel',
                        'type_user' => 'typeUser',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'lastname' => 'lastname',
                        'firstname' => 'firstname',
                        'address' => 'address',
                        'email' => 'email',
                        'password' => 'password',
                        'validationCode' => 'validation_code',
                        'codeExpiresAt' => 'code_expires_at',
                        'isActive' => 'is_active',
                        'roles' => 'roles',
                        'numero_Tel' => 'numero_tel',
                        'typeUser' => 'type_user',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'uniqueConstraints' => [
                            'UNIQ_IDENTIFIER_EMAIL' => [
                                'fields' => [
                                    'email',
                                ],
                            ],
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'commands' => $o[13],
                        'comments' => $o[14],
                        'replies' => $o[15],
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'text',
                    'string',
                    'string',
                    'string',
                    'datetime',
                    'boolean',
                    'json',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'lastname',
                    'firstname',
                    'address',
                    'email',
                    'password',
                    'validationCode',
                    'codeExpiresAt',
                    'isActive',
                    'roles',
                    'numero_Tel',
                    'typeUser',
                ],
                'columnName' => [
                    1 => 'id',
                    'lastname',
                    'firstname',
                    'address',
                    'email',
                    'password',
                    'validation_code',
                    'code_expires_at',
                    'is_active',
                    'roles',
                    'numero_tel',
                    'type_user',
                ],
                'length' => [
                    2 => 180,
                    180,
                    5 => 180,
                    7 => 6,
                    11 => 15,
                    50,
                ],
                'nullable' => [
                    6 => true,
                    true,
                    true,
                    11 => true,
                    true,
                ],
                'fetch' => [
                    13 => 2,
                    2,
                    2,
                ],
                'sourceEntity' => [
                    13 => 'App\\Entity\\User',
                    'App\\Entity\\User',
                    'App\\Entity\\User',
                ],
                'mappedBy' => [
                    13 => 'idUser',
                    'idUser',
                    'idAdmin',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    13 => 'commands',
                    'comments',
                    'replies',
                ],
                'targetEntity' => [
                    13 => 'App\\Entity\\Command',
                    'App\\Entity\\Comment',
                    'App\\Entity\\Reply',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
