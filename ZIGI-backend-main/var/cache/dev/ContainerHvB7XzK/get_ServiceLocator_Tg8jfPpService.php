<?php

namespace ContainerHvB7XzK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Tg8jfPpService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.tg8jfPp' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.tg8jfPp'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\CommandController::createOrder' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::createOrder()', 'getCommandControllercreateOrderService', true],
            'App\\Controller\\CommandController::getAllOrders' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::getAllOrders()', 'getCommandControllergetAllOrdersService', true],
            'App\\Controller\\CommandController::approveOrder' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::approveOrder()', 'getCommandControllerapproveOrderService', true],
            'App\\Controller\\CommandController::rejectOrder' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::rejectOrder()', 'getCommandControllerrejectOrderService', true],
            'App\\Controller\\CommentController::newComment' => ['privates', '.service_locator.nLnEcBQ.App\\Controller\\CommentController::newComment()', 'getCommentControllernewCommentService', true],
            'App\\Controller\\CommentController::listComment' => ['privates', '.service_locator.nLnEcBQ.App\\Controller\\CommentController::listComment()', 'getCommentControllerlistCommentService', true],
            'App\\Controller\\PhotoProductController::executeAddPhoto' => ['privates', '.service_locator.YF1FmtY.App\\Controller\\PhotoProductController::executeAddPhoto()', 'getPhotoProductControllerexecuteAddPhotoService', true],
            'App\\Controller\\ProductController::executeAddCategory' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeAddCategory()', 'getProductControllerexecuteAddCategoryService', true],
            'App\\Controller\\ProductController::executeAddProduct' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeAddProduct()', 'getProductControllerexecuteAddProductService', true],
            'App\\Controller\\ProductController::executeUpdateProduct' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeUpdateProduct()', 'getProductControllerexecuteUpdateProductService', true],
            'App\\Controller\\ProductController::executeDeleteProduct' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeDeleteProduct()', 'getProductControllerexecuteDeleteProductService', true],
            'App\\Controller\\ProductController::executeListProducts' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeListProducts()', 'getProductControllerexecuteListProductsService', true],
            'App\\Controller\\ProductController::executeUpdateCategory' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeUpdateCategory()', 'getProductControllerexecuteUpdateCategoryService', true],
            'App\\Controller\\ProductController::executeDeleteCategory' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeDeleteCategory()', 'getProductControllerexecuteDeleteCategoryService', true],
            'App\\Controller\\ProductController::executeListCategories' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeListCategories()', 'getProductControllerexecuteListCategoriesService', true],
            'App\\Controller\\ProductController::updateProductStock' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::updateProductStock()', 'getProductControllerupdateProductStockService', true],
            'App\\Controller\\ReplyController::addReply' => ['privates', '.service_locator.zmiuSf5.App\\Controller\\ReplyController::addReply()', 'getReplyControlleraddReplyService', true],
            'App\\Controller\\StatsController::getStats' => ['privates', '.service_locator.Ke.SD8W.App\\Controller\\StatsController::getStats()', 'getStatsControllergetStatsService', true],
            'App\\Controller\\UserController::login' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::login()', 'getUserControllerloginService', true],
            'App\\Controller\\UserController::createCustomer' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::createCustomer()', 'getUserControllercreateCustomerService', true],
            'App\\Controller\\UserController::updateUser' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::updateUser()', 'getUserControllerupdateUserService', true],
            'App\\Controller\\UserController::deleteUser' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::deleteUser()', 'getUserControllerdeleteUserService', true],
            'App\\Controller\\UserController::listUsers' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::listUsers()', 'getUserControllerlistUsersService', true],
            'App\\Controller\\UserController::activeAccount' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::activeAccount()', 'getUserControlleractiveAccountService', true],
            'App\\Controller\\UserController::requestNewCode' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::requestNewCode()', 'getUserControllerrequestNewCodeService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\CommandController:createOrder' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::createOrder()', 'getCommandControllercreateOrderService', true],
            'App\\Controller\\CommandController:getAllOrders' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::getAllOrders()', 'getCommandControllergetAllOrdersService', true],
            'App\\Controller\\CommandController:approveOrder' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::approveOrder()', 'getCommandControllerapproveOrderService', true],
            'App\\Controller\\CommandController:rejectOrder' => ['privates', '.service_locator.rT8TQD7.App\\Controller\\CommandController::rejectOrder()', 'getCommandControllerrejectOrderService', true],
            'App\\Controller\\CommentController:newComment' => ['privates', '.service_locator.nLnEcBQ.App\\Controller\\CommentController::newComment()', 'getCommentControllernewCommentService', true],
            'App\\Controller\\CommentController:listComment' => ['privates', '.service_locator.nLnEcBQ.App\\Controller\\CommentController::listComment()', 'getCommentControllerlistCommentService', true],
            'App\\Controller\\PhotoProductController:executeAddPhoto' => ['privates', '.service_locator.YF1FmtY.App\\Controller\\PhotoProductController::executeAddPhoto()', 'getPhotoProductControllerexecuteAddPhotoService', true],
            'App\\Controller\\ProductController:executeAddCategory' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeAddCategory()', 'getProductControllerexecuteAddCategoryService', true],
            'App\\Controller\\ProductController:executeAddProduct' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeAddProduct()', 'getProductControllerexecuteAddProductService', true],
            'App\\Controller\\ProductController:executeUpdateProduct' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeUpdateProduct()', 'getProductControllerexecuteUpdateProductService', true],
            'App\\Controller\\ProductController:executeDeleteProduct' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeDeleteProduct()', 'getProductControllerexecuteDeleteProductService', true],
            'App\\Controller\\ProductController:executeListProducts' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeListProducts()', 'getProductControllerexecuteListProductsService', true],
            'App\\Controller\\ProductController:executeUpdateCategory' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeUpdateCategory()', 'getProductControllerexecuteUpdateCategoryService', true],
            'App\\Controller\\ProductController:executeDeleteCategory' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeDeleteCategory()', 'getProductControllerexecuteDeleteCategoryService', true],
            'App\\Controller\\ProductController:executeListCategories' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::executeListCategories()', 'getProductControllerexecuteListCategoriesService', true],
            'App\\Controller\\ProductController:updateProductStock' => ['privates', '.service_locator.P7gSmYq.App\\Controller\\ProductController::updateProductStock()', 'getProductControllerupdateProductStockService', true],
            'App\\Controller\\ReplyController:addReply' => ['privates', '.service_locator.zmiuSf5.App\\Controller\\ReplyController::addReply()', 'getReplyControlleraddReplyService', true],
            'App\\Controller\\StatsController:getStats' => ['privates', '.service_locator.Ke.SD8W.App\\Controller\\StatsController::getStats()', 'getStatsControllergetStatsService', true],
            'App\\Controller\\UserController:login' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::login()', 'getUserControllerloginService', true],
            'App\\Controller\\UserController:createCustomer' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::createCustomer()', 'getUserControllercreateCustomerService', true],
            'App\\Controller\\UserController:updateUser' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::updateUser()', 'getUserControllerupdateUserService', true],
            'App\\Controller\\UserController:deleteUser' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::deleteUser()', 'getUserControllerdeleteUserService', true],
            'App\\Controller\\UserController:listUsers' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::listUsers()', 'getUserControllerlistUsersService', true],
            'App\\Controller\\UserController:activeAccount' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::activeAccount()', 'getUserControlleractiveAccountService', true],
            'App\\Controller\\UserController:requestNewCode' => ['privates', '.service_locator.hz.RJka.App\\Controller\\UserController::requestNewCode()', 'getUserControllerrequestNewCodeService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\CommandController::createOrder' => '?',
            'App\\Controller\\CommandController::getAllOrders' => '?',
            'App\\Controller\\CommandController::approveOrder' => '?',
            'App\\Controller\\CommandController::rejectOrder' => '?',
            'App\\Controller\\CommentController::newComment' => '?',
            'App\\Controller\\CommentController::listComment' => '?',
            'App\\Controller\\PhotoProductController::executeAddPhoto' => '?',
            'App\\Controller\\ProductController::executeAddCategory' => '?',
            'App\\Controller\\ProductController::executeAddProduct' => '?',
            'App\\Controller\\ProductController::executeUpdateProduct' => '?',
            'App\\Controller\\ProductController::executeDeleteProduct' => '?',
            'App\\Controller\\ProductController::executeListProducts' => '?',
            'App\\Controller\\ProductController::executeUpdateCategory' => '?',
            'App\\Controller\\ProductController::executeDeleteCategory' => '?',
            'App\\Controller\\ProductController::executeListCategories' => '?',
            'App\\Controller\\ProductController::updateProductStock' => '?',
            'App\\Controller\\ReplyController::addReply' => '?',
            'App\\Controller\\StatsController::getStats' => '?',
            'App\\Controller\\UserController::login' => '?',
            'App\\Controller\\UserController::createCustomer' => '?',
            'App\\Controller\\UserController::updateUser' => '?',
            'App\\Controller\\UserController::deleteUser' => '?',
            'App\\Controller\\UserController::listUsers' => '?',
            'App\\Controller\\UserController::activeAccount' => '?',
            'App\\Controller\\UserController::requestNewCode' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\CommandController:createOrder' => '?',
            'App\\Controller\\CommandController:getAllOrders' => '?',
            'App\\Controller\\CommandController:approveOrder' => '?',
            'App\\Controller\\CommandController:rejectOrder' => '?',
            'App\\Controller\\CommentController:newComment' => '?',
            'App\\Controller\\CommentController:listComment' => '?',
            'App\\Controller\\PhotoProductController:executeAddPhoto' => '?',
            'App\\Controller\\ProductController:executeAddCategory' => '?',
            'App\\Controller\\ProductController:executeAddProduct' => '?',
            'App\\Controller\\ProductController:executeUpdateProduct' => '?',
            'App\\Controller\\ProductController:executeDeleteProduct' => '?',
            'App\\Controller\\ProductController:executeListProducts' => '?',
            'App\\Controller\\ProductController:executeUpdateCategory' => '?',
            'App\\Controller\\ProductController:executeDeleteCategory' => '?',
            'App\\Controller\\ProductController:executeListCategories' => '?',
            'App\\Controller\\ProductController:updateProductStock' => '?',
            'App\\Controller\\ReplyController:addReply' => '?',
            'App\\Controller\\StatsController:getStats' => '?',
            'App\\Controller\\UserController:login' => '?',
            'App\\Controller\\UserController:createCustomer' => '?',
            'App\\Controller\\UserController:updateUser' => '?',
            'App\\Controller\\UserController:deleteUser' => '?',
            'App\\Controller\\UserController:listUsers' => '?',
            'App\\Controller\\UserController:activeAccount' => '?',
            'App\\Controller\\UserController:requestNewCode' => '?',
        ]);
    }
}
